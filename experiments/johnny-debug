#!/usr/bin/env python3
"""Command-line input file converter and printer for Johnny.

This tool
- Auto-detects all input sources and their types, from filenames and directories
  of files.
- Parses them, and normalizes them.
- Validates them.
- Prints out their contents on the command-line (or to a file).

This tool is also able to join transactions and positions and print out
aggregates at the chain (trade) level.

The purpose of this tool is to
- Make it straightforward to debug input file parsing and conversion,
- Work from the command-line.

"""
__copyright__ = "Copyright (C) 2021  Martin Blais"
__license__ = "GNU GPLv2"

import functools
from functools import partial
import logging
import os
from decimal import Decimal
from typing import List, Optional, Mapping

from more_itertools import first, last
import click

from johnny.base import config as configlib
from johnny.base import chains as chainslib
from johnny.base import mark
from johnny.base.etl import petl


ZERO = Decimal(0)


@click.command()
@click.argument("config_filename", type=click.Path(exists=True))
def debug(config_filename: str):
    """Parse the configuration, the sources, transform, and save."""
    config = configlib.ParseFile(config_filename)
    transactions = petl.frompickle(config.output.transactions)
    price_map = mark.GetPriceMap(transactions, config)
    transactions = mark.Mark(transactions, price_map)
    chains, _ = chainslib.TransactionsTableToChainsTable(transactions, config)
    print(
        chains
        # .selecteq('underlying', '')
        .lookallstr()
    )


if __name__ == "__main__":
    debug()
